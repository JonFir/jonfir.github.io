<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FP on Евгений Елчев</title>
    <link>https://jonfir.github.io/tags/fp/</link>
    <description>Recent content in FP on Евгений Елчев</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Tue, 29 Oct 2019 14:41:24 +0700</lastBuildDate>
    <atom:link href="https://jonfir.github.io/tags/fp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Функциональный Swift — это просто</title>
      <link>https://jonfir.github.io/blogs/it/easy-fp-swift/</link>
      <pubDate>Tue, 29 Oct 2019 14:41:24 +0700</pubDate>
      <guid>https://jonfir.github.io/blogs/it/easy-fp-swift/</guid>
      <description>&lt;p&gt;В статьях о функциональном программировании много пишут о том, как ФП подход улучшает разработку: код становится легко писать, читать, разбивать на потоки и тестировать, построить плохую архитектуру невозможно~~, а волосы становятся мягкими и шелковистыми~~.&lt;/p&gt;&#xA;&lt;p&gt;Недостаток один — высокий порог входа. Пытаясь разобраться в ФП, я столкнулся с огромным количеством теории, функторами, монадами, теорией категорий и алгебраическими типами данных. А как применять ФП на практике, было неясно. Кроме того, примеры приводились на незнакомых мне языках — хаскеле и скале.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
